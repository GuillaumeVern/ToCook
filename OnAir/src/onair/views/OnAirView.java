/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package onair.views;
import java.sql.*;
import onair.database.DatabaseAccess;

/**
 *
 * @author Administrator
 */
public class OnAirView extends javax.swing.JFrame {

    /**
     * Creates new form OnAir
     */
    protected DatabaseAccess dbaccess;
            
    public OnAirView() {
        initComponents();
        this.dbaccess = new DatabaseAccess();
        String[][] emissions = dbaccess.getEmissions();
        for(String[] emission : emissions){
            this.comboEmission.addItem(emission[2]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        insertDiffusion = new javax.swing.JPanel();
        labelDateDeDiffusion = new javax.swing.JLabel();
        dateField = new javax.swing.JFormattedTextField();
        labelHoraireDeDiffusion = new javax.swing.JLabel();
        timeField = new javax.swing.JFormattedTextField();
        labelDirect = new javax.swing.JLabel();
        isDirect = new javax.swing.JCheckBox();
        labelEmission = new javax.swing.JLabel();
        comboEmission = new javax.swing.JComboBox<>();
        labelProgramme = new javax.swing.JLabel();
        comboProgramme = new javax.swing.JComboBox<>();
        buttonInsertDiffusion = new javax.swing.JButton();
        buttonEffacerContenuDiffusion = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelDateDeDiffusion.setText("Date de diffusion :");

        dateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("YYYY-MM-dd"))));

        labelHoraireDeDiffusion.setText("Horaire de diffusion :");

        timeField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance())));

        labelDirect.setText("Direct :");

        isDirect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isDirectActionPerformed(evt);
            }
        });

        labelEmission.setText("Emission :");

        comboEmission.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboEmissionItemStateChanged(evt);
            }
        });

        labelProgramme.setText("Programme :");

        buttonInsertDiffusion.setText("Valider");

        buttonEffacerContenuDiffusion.setText("effacer");

        javax.swing.GroupLayout insertDiffusionLayout = new javax.swing.GroupLayout(insertDiffusion);
        insertDiffusion.setLayout(insertDiffusionLayout);
        insertDiffusionLayout.setHorizontalGroup(
            insertDiffusionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, insertDiffusionLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(buttonEffacerContenuDiffusion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonInsertDiffusion)
                .addGap(30, 30, 30))
            .addGroup(insertDiffusionLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addGroup(insertDiffusionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(insertDiffusionLayout.createSequentialGroup()
                        .addComponent(labelDateDeDiffusion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(insertDiffusionLayout.createSequentialGroup()
                        .addComponent(labelHoraireDeDiffusion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(insertDiffusionLayout.createSequentialGroup()
                        .addComponent(labelDirect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isDirect))
                    .addGroup(insertDiffusionLayout.createSequentialGroup()
                        .addComponent(labelEmission)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboEmission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(insertDiffusionLayout.createSequentialGroup()
                        .addComponent(labelProgramme)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboProgramme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(203, Short.MAX_VALUE))
        );
        insertDiffusionLayout.setVerticalGroup(
            insertDiffusionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertDiffusionLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(insertDiffusionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDateDeDiffusion)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(insertDiffusionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHoraireDeDiffusion)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(insertDiffusionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDirect)
                    .addComponent(isDirect))
                .addGap(30, 30, 30)
                .addGroup(insertDiffusionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEmission)
                    .addComponent(comboEmission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(insertDiffusionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProgramme)
                    .addComponent(comboProgramme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(insertDiffusionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonInsertDiffusion)
                    .addComponent(buttonEffacerContenuDiffusion))
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Ins√©rer une diffusion", insertDiffusion);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab3", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void isDirectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isDirectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isDirectActionPerformed

    private void comboEmissionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboEmissionItemStateChanged
        String[][] programmes = dbaccess.getProgramsOfEmission(this.comboEmission.getSelectedIndex() + 1);
        System.out.println(programmes.length);
        this.comboProgramme.removeAllItems();
        for(String[] programme : programmes){
            this.comboProgramme.addItem(programme[3]);
        }

    }//GEN-LAST:event_comboEmissionItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OnAirView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OnAirView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OnAirView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OnAirView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OnAirView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEffacerContenuDiffusion;
    private javax.swing.JButton buttonInsertDiffusion;
    private javax.swing.JComboBox<String> comboEmission;
    private javax.swing.JComboBox<String> comboProgramme;
    private javax.swing.JFormattedTextField dateField;
    private javax.swing.JPanel insertDiffusion;
    private javax.swing.JCheckBox isDirect;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelDateDeDiffusion;
    private javax.swing.JLabel labelDirect;
    private javax.swing.JLabel labelEmission;
    private javax.swing.JLabel labelHoraireDeDiffusion;
    private javax.swing.JLabel labelProgramme;
    private javax.swing.JFormattedTextField timeField;
    // End of variables declaration//GEN-END:variables
}
